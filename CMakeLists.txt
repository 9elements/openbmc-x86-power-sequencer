cmake_minimum_required(VERSION 3.5)
  project(yaml_test)
  find_package(yaml-cpp)
  FIND_PACKAGE( Boost 1.55 COMPONENTS system chrono REQUIRED )

  find_library(GPIOD_LIBRARY NAMES libgpiod.so)
  if(NOT GPIOD_LIBRARY)
    message(FATAL_ERROR "gpiod library not found.")
  endif()
  find_library(GPIODCXX_LIBRARY NAMES libgpiodcxx.so)
  if(NOT GPIODCXX_LIBRARY)
    message(FATAL_ERROR "gpiodcxx library not found.")
  endif()
  find_path(GPIOD_INCLUDE_DIR gpiod.hpp)
  if(NOT GPIOD_INCLUDE_DIR)
    message(FATAL_ERROR "gpiod headers not found.")
  endif()

  set(THREADS_PREFER_PTHREAD_FLAG ON)
  find_package(Threads REQUIRED)

  option(PACKAGE_TESTS "Build the tests" ON)
  if(PACKAGE_TESTS)
    enable_testing()
    include(GoogleTest)
    add_subdirectory(tests)
  endif()

  include_directories(src/ ${YAML_CPP_INCLUDE_DIRS} ${Boost_INCLUDE_DIR} ${GPIOD_INCLUDE_DIR})
  set(CMAKE_CXX_STANDARD 20)
  set(CMAKE_CXX_STANDARD_REQUIRED ON)

  add_executable(psd src/Main.cpp src/Config.cpp src/StateMachine.cpp src/GpioInput.cpp src/GpioOutput.cpp src/Signal.cpp
  		src/SignalProvider.cpp src/Logic.cpp src/LogicInput.cpp src/NullInput.cpp src/NullOutput.cpp)
  target_link_libraries(psd ${YAML_CPP_LIBRARIES} ${Boost_LIBRARIES} ${GPIODCXX_LIBRARY} Threads::Threads)
